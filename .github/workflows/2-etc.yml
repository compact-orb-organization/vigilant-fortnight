name: 2 Etc

on:
  workflow_dispatch:

env:
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  CONFIG_PREFIX: 2
  EMERGE_PARAMETERS: app-admin/sudo app-containers/docker app-containers/docker-cli app-containers/docker-compose app-misc/jq app-misc/screen app-shells/bash-completion dev-db/mariadb dev-lang/rust-bin dev-libs/mimalloc dev-vcs/git net-libs/nodejs net-misc/mosh net-vpn/wireguard-tools sys-block/io-scheduler-udev-rules sys-kernel/gentoo-kernel-bin sys-kernel/installkernel sys-kernel/linux-firmware www-servers/nginx
  STORAGE_ENDPOINT: ${{ secrets.STORAGE_ENDPOINT }}
  STORAGE_ZONE_NAME: ${{ secrets.STORAGE_ZONE_NAME }}

jobs:
  emerge:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Gentoo Environment
        run: |
          sudo --preserve-env bash -e -c '
            aria2c --dir=/mnt --header="AccessKey: $ACCESS_KEY" --header="accept: */*" https://$STORAGE_ENDPOINT/$STORAGE_ZONE_NAME/$CONFIG_PREFIX.tar.xz
            mkdir /mnt/gentoo
            tar --directory=/mnt/gentoo --extract --file=/mnt/$CONFIG_PREFIX.tar.xz --numeric-owner --preserve-permissions --xattrs-include="*.*"
            rm /mnt/$CONFIG_PREFIX.tar.xz
          '

      - name: Setup Binary Package Cache
        run: |
          sudo --preserve-env bash -e -c '
            mkdir /mnt/gentoo/var/cache/binpkgs-lowerdir
            bash ./download-directory.sh /$CONFIG_PREFIX /mnt/gentoo/var/cache/binpkgs-lowerdir
            mkdir /mnt/gentoo/var/cache/binpkgs-upperdir
            mkdir /mnt/gentoo/var/cache/binpkgs-workdir
            mount --types overlay overlay --options lowerdir=/mnt/gentoo/var/cache/binpkgs-lowerdir,upperdir=/mnt/gentoo/var/cache/binpkgs-upperdir,workdir=/mnt/gentoo/var/cache/binpkgs-workdir /mnt/gentoo/var/cache/binpkgs
          '

      - name: Mount Filesystems
        run: |
          sudo --preserve-env bash -e -c '
            mount --types proc /proc /mnt/gentoo/proc
            mount --rbind /sys /mnt/gentoo/sys
            mount --make-rslave /mnt/gentoo/sys
            mount --rbind /dev /mnt/gentoo/dev
            mount --make-rslave /mnt/gentoo/dev
            mount --bind /run /mnt/gentoo/run
            mount --make-slave /mnt/gentoo/run
          '

      - name: Chroot and Run emerge.sh
        run: |
          sudo --preserve-env bash -e -c '
            cp ./$CONFIG_PREFIX/emerge.sh /mnt/gentoo/tmp
            cp ./env.sh /mnt/gentoo/tmp
            chroot /mnt/gentoo /usr/bin/bash /tmp/emerge.sh "$EMERGE_PARAMETERS"
            rm --recursive /mnt/gentoo/tmp/*
          '

      - name: Upload Binary Packages
        run: |
          sudo --preserve-env bash -e -c '
            bash ./upload-directory.sh /mnt/gentoo/var/cache/binpkgs-upperdir /$CONFIG_PREFIX
          '
